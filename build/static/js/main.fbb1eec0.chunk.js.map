{"version":3,"sources":["components/Logo.js","components/ErrorHandler/ErrorModal.js","components/End.js","components/ConnectionDisplay.js","components/SearchPage.js","components/StartPage.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","ErrorModal","props","className","classes","header","title","content","message","actions","onClick","onConfirm","End","id","href","addDurationToTime","time","h","min","split","hours","minutes","hoursSum","Number","minutesSum","outputWithoutYear","date","dateStringSplitted","toString","dateMonth","dateDay","ConnectionDisplay","useState","clickedEnd","setEndClicked","hideConnectionDisplay","console","log","departureDay","departureStop","newDepartureTime","StringTime","hs","Math","floor","mins","round","stringToTime","additionalRandomMinutes","tneu","timeToDecimalAdd","departureTime","splittedDurationsCheap","m","t","trail1","waiting1","trail2","durationSplitCheap","durationH","durationMin","waiting2","trail3","durationSplitFast","size","color","destinationStop","onGoBack","type","onSetStartFormHidden","SearchPage","setDepartureStop","setDestinationStop","setDepartureDay","setDepartureTime","searchClicked","setSearchClicked","error","setError","hideSearchFields","setHideSearchFields","departureInputRef","useRef","destinationInputRef","errorOccured","Fragment","list","spellCheck","value","onChange","event","target","placeholder","ref","a","current","trim","length","StartPage","hideStartForm","setStartFormHidden","callSearchPage","setCallSearchPage","hideIntroSentences","setHideIntroSentences","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbb1eec0.chunk.js","sourcesContent":["import \"../Style.css\";\r\n\r\nfunction Logo() {\r\n  return (\r\n    <div className=\"logo\">\r\n      <h1 className=\"logo_h2\">Nav2Gö</h1>\r\n    </div>\r\n  );\r\n}\r\nexport default Logo;\r\n","import React from \"react\";\r\n// import Card from './Card';\r\nimport \"../../Style.css\";\r\n// import Button from './Button';\r\nimport classes from \"./ErrorModal.module.css\";\r\n\r\nconst ErrorModal = (props) => {\r\n  return (\r\n    <div className=\"ErrorPage\">\r\n      {/* <div className={classes.backdrop} onClick={props.onConfirm} />   Hier müsste noch eine Card oder Form drüber gelegegt werden*/}\r\n      {/* backdrop meint auf den Hintergrund klicken */}\r\n      <div className=\"ErrorPageTitle\">\r\n        <header className={classes.header}>\r\n          <h2>{props.title}</h2>\r\n        </header>\r\n        <div className={classes.content}>\r\n          <p>{props.message}</p>\r\n        </div>\r\n        <footer className={classes.actions}>\r\n          <button onClick={props.onConfirm}>Zurück zur Suche</button>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from \"react\";\r\nimport \"../Style.css\";\r\nimport Logo from \"./Logo.js\";\r\n\r\nconst End = (props) => {\r\n  // Button Click Handler einfügen\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <header className=\"Startseite-header\">\r\n          <h1 className=\"logo\">Nav2Gö</h1>\r\n          <div id=\"endText\">\r\n            <p>\r\n              <br></br>Vielen Dank für die Teilnahme!{\" \"}\r\n            </p>\r\n            <p>\r\n              Klicken Sie jetzt bitte auf den Button, um zur Umfrage zu\r\n              gelangen.\r\n              {/* <p> Klicken Sie jetzt bitte auf den Button, um zur zweiten App-Version zu gelangen */}\r\n              <br></br>\r\n              <br></br>\r\n            </p>\r\n          </div>\r\n        </header>\r\n        <div id=\"containerButtonEnd\">\r\n          <a href=\"https://www.survio.com/survey/d/C3K5I4C4W7L5R1J7O\">\r\n            Umfrage starten!\r\n          </a>\r\n          {/* <a href=\"https://morza95.github.io\">\r\n            App-Version 2 starten\r\n          </a> */}\r\n          {/* <button type=\"submit\">Zurück auf Anfang</button> */}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default End;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../Style.css\";\r\nimport Logo from \"./Logo.js\";\r\nimport SearchPage from \"./SearchPage.js\";\r\nimport End from \"./End.js\";\r\nimport { FaBus } from \"react-icons/fa\";\r\nimport { GiKickScooter } from \"react-icons/gi\";\r\nimport { BsArrowRight } from \"react-icons/bs\";\r\n\r\n//import 'webpack';\r\n/* import logo from '.../public/busemoji.png'\r\n\r\nconsole.log(logo); // /logo.84287d09.png\r\n\r\nfunction Header() {\r\n  // Import result is the URL of your image\r\n  return <img src={logo} alt=\"Logo\" />;\r\n}\r\n */\r\n\r\n//die Fahrtdauer im Format h (Eingabewert 1), min (Eingabewert 2) wird nach einem Festen Schlüssel (0,1 , 0,3 oder 0,2 der Gesamtfahrtdauer)\r\n// aufgeteilt in 2 bzw. 3 Fahrten und 1 bzw. 2 Wartezeiten . Ausgegeben wird es\r\n// in einem Array nach dem Muster [Fahrtdauer1, WartezeitAufFahrt2, Fahrtdauer2, usw]\r\nconst durationSplitCheap = (h, m) => {\r\n  const hour = Number(h);\r\n  const min = Number(m);\r\n  const t = Number(h * 60 + min);\r\n  const trail1 = Number(Math.floor(t * 0.3));\r\n  const waiting1 = Number(Math.floor(t * 0.15));\r\n  const trail2 = Number(t - trail1 - waiting1);\r\n  //console.log(\"durationSplitFast= \"+ [ Number(trail1), Number(waiting1), Number(trail2)]);\r\n  return [Number(trail1), Number(waiting1), Number(trail2)];\r\n};\r\n\r\nconst durationSplitFast = (h, m) => {\r\n  const hour = Number(h);\r\n  const min = Number(m);\r\n  const t = Number(h * 60 + min);\r\n  let trail1 = Number(Math.floor(t * 0.3));\r\n  let waiting1 = Number(Math.floor(t * 0.1));\r\n  let trail2 = Number(Math.floor(t * 0.2));\r\n  let waiting2 = Number(Math.floor(t * 0.15));\r\n  let trail3 = Number(t - trail1 - waiting1 - trail2 - waiting2);\r\n  //console.log(\"durationSplitCheap= \"+ [Number(trail1), Number(waiting1), Number(trail2), Number(waiting2), Number(trail3)])\r\n  return [\r\n    Number(trail1),\r\n    Number(waiting1),\r\n    Number(trail2),\r\n    Number(waiting2),\r\n    Number(trail3),\r\n  ];\r\n};\r\n\r\n// zu einer Uhrzeit (attribut 1) eine h (attribut 2) und Min (attribut 3)  hinzufügen\r\nconst addDurationToTime = (time, h, min) => {\r\n  //console.log(\"time =\" + time );\r\n  const [hours, minutes] = time.split(\":\");\r\n  var h = Number(h);\r\n  let hoursSum = Number(hours) + Number(h);\r\n  let minutesSum = Number(minutes) + Number(min);\r\n  let dateChange = false;\r\n  while (minutesSum >= 60) {\r\n    minutesSum = minutesSum - 60;\r\n    hoursSum = hoursSum + 1;\r\n  }\r\n  if (minutesSum < 10) minutesSum = \"0\" + minutesSum;\r\n  if (hoursSum >= 24) {\r\n    hoursSum -= 24;\r\n    // addDay(props.departureDay,true);\r\n  }\r\n  if (hoursSum < 10) hoursSum = \"0\" + hoursSum;\r\n  return [hoursSum + \":\" + minutesSum, dateChange];\r\n};\r\n\r\nconst addDay = (date, changeVariable) => {\r\n  let dateString = date.toString();\r\n  let dateStringSplitted = dateString.split(\"-\");\r\n  let dateMonth = Number(dateStringSplitted[1]);\r\n  let dateDay = Number(dateStringSplitted[2]);\r\n  let dateYear = Number(dateStringSplitted[0]);\r\n  if (changeVariable == true) {\r\n    if (\r\n      dateMonth == 2 &&\r\n      dateDay == 28 &&\r\n      (dateYear == 2024 || 2018 || 2032 || 2036)\r\n    ) {\r\n      dateMonth = dateMonth + 1;\r\n      dateDay = 1;\r\n    }\r\n    if ((dateMonth == 1 || 3 || 5 || 7 || 8 || 10 || 12) && dateDay == 31) {\r\n      dateDay = 1;\r\n      if (dateMonth == 12) {\r\n        dateMonth = 1;\r\n        dateYear = dateYear + 1;\r\n      } else {\r\n        dateMonth = dateMonth + 1;\r\n      }\r\n    }\r\n    if ((dateMonth == 4 || 6 || 9 || 11) && dateDay == 30) {\r\n      dateMonth = dateMonth + 1;\r\n      dateDay = 1;\r\n    }\r\n  }\r\n  if (dateDay < 10) dateDay = \"0\" + dateDay;\r\n  return dateYear + \"-\" + dateMonth + \"-\" + dateDay;\r\n};\r\n\r\nconst outputWithoutYear = (date) => {\r\n  let dateString = date.toString();\r\n  let dateStringSplitted = dateString.split(\"-\");\r\n  let dateMonth = Number(dateStringSplitted[1]);\r\n  let dateDay = Number(dateStringSplitted[2]);\r\n  let dateYear = Number(dateStringSplitted[0]);\r\n  return dateDay + \".\" + dateMonth + \".\";\r\n};\r\n\r\n// //fügt dem eingegebenden Datum einen weitern Tag hinzu\r\n// const changeArrivalDate = (earlyDate, change) => {\r\n//   if (change== true){\r\n//     // console.log(\"changeArrivalDate: \" +earlyDate );\r\n//     let newDate = new Date(earlyDate.setTime( earlyDate.getTime() + 1 * 86400000 ));\r\n//   return(newDate);\r\n//   }else{\r\n//     return (earlyDate);\r\n//   }\r\n// }\r\n\r\n// Date.prototype.addDays = function(days) {\r\n//   var date = new Date(this.valueOf());\r\n\r\n//   date.setDate(date.getDate() + days);\r\n//   return date;\r\n// }\r\n\r\n// Entwurf: zu einer Dauer (hs attribut 1, mins attribut 2) eine Dauer () h (attribut 3) und Min (attribut 4))  hinzufügen\r\n//und in der Form ... ausgeben:\r\n// const addDurationToDuration = (h1, m1, h2, m2) => {\r\n//   let hours1 = Number(h1);\r\n//   let hours2 = Number(h2);\r\n//   let min1 = Number(min1);\r\n//   let min2 = Number(min2);\r\n\r\nconst ConnectionDisplay = (props) => {\r\n  const [clickedEnd, setEndClicked] = useState(false);\r\n  const [hideConnectionDisplay, setHideConnectionDisplay] = useState(false);\r\n  // const [loadingMessage, setloadingMessage] = useState(true);\r\n  const [changeDay, setChangeDay] = useState(false);\r\n\r\n  {\r\n    console.log(props.departureDay, props.departureStop);\r\n  }\r\n\r\n  const backClickHandler = () => {\r\n    props.onGoBack();\r\n  };\r\n  const endClickHandler = () => {\r\n    setEndClicked(true);\r\n  };\r\n  // ------------------------------- FÜR DIE VERZÖGERUNG---------------------------------------------------------------\r\n  // useEffect(() => {\r\n  //   const timer = setTimeout(() => {\r\n  //  setHideConnectionDisplay(false);\r\n  //  setloadingMessage(false);\r\n  //   }, 1000);\r\n  //   return () => clearTimeout(timer);\r\n  // }, []);\r\n\r\n  //   --------------------------(nicht ganz so wichtige) Ideen für Eingabezeit + paar Sekunden als Losfahrzeit anzeigen--------------------\r\n\r\n  // zum in-string konvertieren, außerdem zwischen 3-9 min (zufällig) hinzufügen\r\n  const timeToDecimalAdd = (time) => {\r\n    const [hours, minutes] = time.split(\":\");\r\n    let additionalRandomMinutes = props.additionalRandomMinutes;\r\n    let tneu = Number(minutes) + Number(additionalRandomMinutes);\r\n    return Number(hours) + Number(tneu) / 60;\r\n  };\r\n\r\n  //   zum String in Zeit konvertieren\r\n  const stringToTime = (StringTime) => {\r\n    const hs = Math.floor(StringTime);\r\n    const mins = Math.round((StringTime - hs) * 60);\r\n    return `${hs < 10 ? \"0\" : \"\"}${hs}:${mins < 10 ? \"0\" : \"\"}${mins}`;\r\n  };\r\n\r\n  let newDepartureTime = stringToTime(timeToDecimalAdd(props.departureTime));\r\n  let splittedDurationsCheap = durationSplitCheap(\r\n    props.durationH,\r\n    props.durationMin\r\n  );\r\n  let splittedDurationsFast = durationSplitFast(\r\n    props.durationH,\r\n    props.durationMin\r\n  );\r\n\r\n  return clickedEnd ? (\r\n    <End\r\n    // onGoBack={() => {\r\n    // setHideConnectionDisplay(false);\r\n    // setEndClicked(false);}\r\n    />\r\n  ) : (\r\n    <div className=\"container-verbindung\">\r\n      {/* {endClickHandler ? null:  */}\r\n      {hideConnectionDisplay ? null : (\r\n        <form>\r\n          <h1 className=\"Verbindung-header\">Verbindung</h1>\r\n          <h2>Übersicht</h2>\r\n          <div className=\"connectionChoice\">\r\n            {/* {timeMinRandomizer(durationMin)};\r\n                {timeHourRandomizer(durationHour)}\r\n                {timeMinCheapRandomizer(durationCheapMin)};\r\n                {timeHourCheapRandomizer(durationHour)}; */}\r\n            <div id=\"containerFastestConnection\">\r\n              <div className=\"verbindung-textfeld\">Fahrtkosten: 2.60 € </div>\r\n              <div className=\"verbindung-textfeld\">Dauer: 0 h 42 min</div>\r\n              <div className=\"verbindung-textfeld\">Umstiege: 1</div>\r\n              <div className=\"umstiegIcons\">\r\n                <FaBus size=\"3rem\" color=\"white\" />\r\n                <BsArrowRight size=\"3rem\" color=\"white\" />\r\n                <FaBus size=\"3rem\" color=\"white\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <h2 className=\"h2ConnectionDisplay\">Schritt 1</h2>\r\n          <div className=\"container-ConnectionDisplay\">\r\n            <div className=\"verbindung-textfeld\">\r\n              {\" \"}\r\n              <p>Abfahrt:</p> {outputWithoutYear(props.departureDay)} um{\" \"}\r\n              {newDepartureTime}{\" \"}\r\n            </div>\r\n            <div className=\"verbindung-textfeld\">Linie: 50</div>\r\n            <div className=\"verbindung-textfeld\">\r\n              <p>Ankunft:</p> {outputWithoutYear(props.departureDay)} um{\" \"}\r\n              {addDurationToTime(\r\n                newDepartureTime,\r\n                Number(0),\r\n                Number(splittedDurationsCheap[0])\r\n              )}{\" \"}\r\n            </div>\r\n            <div className=\"verbindung-textfeld\">\r\n              <p>Abfahrt an Haltestelle:</p> {props.departureStop}{\" \"}\r\n            </div>\r\n            <div className=\"busIcon\">\r\n              <FaBus size=\"3rem\" color=\"white\" />\r\n            </div>\r\n            <div className=\"verbindung-textfeld\">\r\n              <p>Ankunft an Haltestelle:</p> Weender Straße-Ost{\" \"}\r\n            </div>\r\n          </div>\r\n          <h2 className=\"h2ConnectionDisplay\">Schritt 2</h2>\r\n          <div className=\"container-ConnectionDisplay\">\r\n            <div className=\"verbindung-textfeld\">\r\n              {\" \"}\r\n              <p>Abfahrt:</p> {outputWithoutYear(props.departureDay)} um{\" \"}\r\n              {addDurationToTime(\r\n                newDepartureTime,\r\n                Number(0),\r\n                Number(splittedDurationsCheap[0] + splittedDurationsCheap[1])\r\n              )}{\" \"}\r\n            </div>\r\n            <div className=\"verbindung-textfeld\">Linie: 18</div>\r\n            <div className=\"verbindung-textfeld\">\r\n              <p>Ankunft:</p> {outputWithoutYear(props.departureDay)} um{\" \"}\r\n              {addDurationToTime(\r\n                newDepartureTime,\r\n                Number(0),\r\n                Number(\r\n                  splittedDurationsCheap[0] +\r\n                    splittedDurationsCheap[1] +\r\n                    splittedDurationsCheap[2]\r\n                )\r\n              )}{\" \"}\r\n            </div>\r\n            <div className=\"verbindung-textfeld\">\r\n              <p>Abfahrt an Haltestelle:</p> Weender Straße-Ost{\" \"}\r\n            </div>\r\n            <div className=\"busIcon\">\r\n              <FaBus size=\"3rem\" color=\"white\" />\r\n            </div>\r\n            <div className=\"verbindung-textfeld\">\r\n              <p>Ankunft an Haltestelle:</p> {props.destinationStop}{\" \"}\r\n            </div>\r\n          </div>\r\n          <div className=\"buttons-verbindung\">\r\n            <button className=\"button\" onClick={backClickHandler} type=\"submit\">\r\n              {\" \"}\r\n              Zurück\r\n            </button>\r\n            <button\r\n              className=\"button\"\r\n              onClick={() => {\r\n                endClickHandler();\r\n                props.onSetStartFormHidden(true);\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Test Beenden?\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectionDisplay;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport ErrorModal from \"./ErrorHandler/ErrorModal.js\";\r\nimport \"../Style.css\";\r\nimport Verbindungsanzeige from \"./ConnectionDisplay.js\";\r\nimport StartPage from \"./StartPage.js\";\r\nimport { BsArrowLeftRight } from \"react-icons/bs\";\r\nimport ConnectionDisplay from \"./ConnectionDisplay.js\";\r\n\r\nconst SearchPage = (props) => {\r\n  // useState\r\n\r\n  const [departureStop, setDepartureStop] = useState(\"\");\r\n  const [destinationStop, setDestinationStop] = useState(\"\");\r\n  const [departureDay, setDepartureDay] = useState(\"\");\r\n  const [departureTime, setDepartureTime] = useState(\"\");\r\n  const [searchClicked, setSearchClicked] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [hideSearchFields, setHideSearchFields] = useState(false);\r\n  const departureInputRef = useRef();\r\n  const destinationInputRef = useRef();\r\n  // const [loadingMessage, setloadingMessage] = useState(true);\r\n\r\n  let errorOccured = false;\r\n\r\n  const backClickHandler = () => {\r\n    props.onGoBack();\r\n  };\r\n\r\n  const departureChangeHandler = (event) => {\r\n    setDepartureStop(event.target.value);\r\n    //const enteredDeparture = departureInputRef.current.value;\r\n  };\r\n\r\n  //////// Fehlerprüfung - Prevent////////////////\r\n\r\n  const errorPrevent = () => {\r\n    if (\r\n      departureStop.trim().length === 0 ||\r\n      destinationStop.trim().length === 0\r\n    ) {\r\n      setError({\r\n        title: \"Falsche Daten\",\r\n        message: \"Bitte geben Sie einen passenden Start- und Zielort ein!\",\r\n      });\r\n      return (errorOccured = true);\r\n    }\r\n    if (departureTime === \"\" || departureDay === \"\") {\r\n      setError({\r\n        title: \"Falsche Daten\",\r\n        message: \"Bitte geben Sie einen Abfahrtstag und eine Abfahrtszeit an!\",\r\n      });\r\n      return (errorOccured = true);\r\n    }\r\n    if (departureStop === destinationStop) {\r\n      setError({\r\n        title: \"Falsche Daten\",\r\n        message: \"Start- und Zielort dürfen nicht identisch sein!\",\r\n      });\r\n      return (errorOccured = true);\r\n    }\r\n  };\r\n\r\n  ////////// ErrorHandler /////////\r\n\r\n  const errorHandler = () => {\r\n    setError(false);\r\n  };\r\n\r\n  // errorPrevent();\r\n  // console.log(Error);\r\n  // //{Error? setSearchClicked(false) : setSearchClicked(true)}\r\n  // if (Error) {\r\n  //   return setSearchClicked(true) && console.log(\"weiter gehts\");\r\n  // }\r\n  // return setSearchClicked(false) && console.log(\"Fehler Aufgetreten\");\r\n\r\n  ////// Handler ///////\r\n\r\n  const searchClickedHandler = () => {\r\n    setSearchClicked(true);\r\n  };\r\n\r\n  // In \"Update\" von Kai funktioniert es noch\r\n\r\n  // let departure [] = {departurevalue = departureInputRef.current.value }\r\n  // let destination [] = { destinationvalue = destinationInputRef}\r\n\r\n  const changeStopHandler = () => {\r\n    let a = departureInputRef.current.value;\r\n    setDepartureStop(destinationInputRef.current.value);\r\n    setDestinationStop(a);\r\n  };\r\n\r\n  const destinationStopHandler = (event) => {\r\n    setDestinationStop(event.target.value);\r\n    // const enteredDestinationStop = destinationInputRef.current.value;\r\n  };\r\n  const departureDayHandler = (event) => {\r\n    setDepartureDay(event.target.value);\r\n    //localStorage.setItem()\r\n  };\r\n  const departureTimeHandler = (event) => {\r\n    setDepartureTime(event.target.value);\r\n  };\r\n\r\n  // ------------------------------- FÜR DIE VERZÖGERUNG---------------------------------------------------------------\r\n  //  useEffect(() => {\r\n  //   const timer = setTimeout(() => {\r\n  //  setloadingMessage(false);\r\n  //   }, 1000);\r\n  //   return () => clearTimeout(timer);\r\n  // }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {error && (\r\n        <ErrorModal\r\n          title={error.title}\r\n          message={error.message}\r\n          onConfirm={errorHandler}\r\n        />\r\n      )}\r\n      {hideSearchFields ? null : (\r\n        <div>\r\n          <h1> Verbindungssuche </h1>\r\n          <div className=\"container-searchpage\">\r\n            <input\r\n              list=\"haltestellen\"\r\n              spellCheck=\"false\"\r\n              type=\"text\"\r\n              value={departureStop}\r\n              onChange={departureChangeHandler}\r\n              placeholder=\"Start\"\r\n              ref={departureInputRef}\r\n            />\r\n            <button className=\"button-swap\" onClick={changeStopHandler}>\r\n              {/* {\" \"} */}\r\n              <BsArrowLeftRight size=\"3rem\" />\r\n            </button>\r\n            <input\r\n              list=\"haltestellen\"\r\n              spellCheck=\"false\"\r\n              type=\"text\"\r\n              value={destinationStop}\r\n              onChange={destinationStopHandler}\r\n              placeholder=\"Ziel\"\r\n              ref={destinationInputRef}\r\n            />\r\n            <input\r\n              type=\"date\"\r\n              value={departureDay}\r\n              onChange={departureDayHandler}\r\n            />\r\n            <br></br>\r\n            <input\r\n              type=\"time\"\r\n              value={departureTime}\r\n              onChange={departureTimeHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div>\r\n        {searchClicked ? (\r\n          // (loadingMessage? <p>...loading...</p> :\r\n          <ConnectionDisplay\r\n            onSetStartFormHidden={props.onSetStartFormHidden}\r\n            onGoBack={() => {\r\n              setHideSearchFields(false);\r\n              setSearchClicked(false);\r\n            }}\r\n            departureStop={departureStop}\r\n            destinationStop={destinationStop}\r\n            departureDay={departureDay}\r\n            departureTime={departureTime}\r\n            durationH={0}\r\n            durationMin={42}\r\n            additionalRandomMinutes={3}\r\n          />\r\n        ) : (\r\n          <div className=\"buttons-search-page\">\r\n            <button\r\n              className=\"button-search\"\r\n              onClick={() => {\r\n                errorPrevent();\r\n                {\r\n                  if (errorOccured) {\r\n                    return;\r\n                  } else {\r\n                    setHideSearchFields(true);\r\n                    searchClickedHandler();\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              Suchen\r\n            </button>\r\n            <button\r\n              className=\"button-search\"\r\n              onClick={backClickHandler}\r\n              type=\"submit\"\r\n            >\r\n              Zurück zur Startseite\r\n            </button>{\" \"}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <datalist id=\"haltestellen\">\r\n        <option value=\"An der Lutte\"></option>\r\n        <option value=\"Auf dem Hagen\"></option>\r\n        <option value=\"Baumweg\"></option>\r\n        <option value=\"Bornbreite\"></option>\r\n        <option value=\"Bürgerstraße\"></option>\r\n        <option value=\"Deisterstraße\"></option>\r\n        <option value=\"Elmweg\"></option>\r\n        <option value=\"Fritz-Straße\"></option>\r\n        <option value=\"Gehrenring\"></option>\r\n        <option value=\"Grüner Weg\"></option>\r\n        <option value=\"Hauptbahnhof\"></option>\r\n        <option value=\"Hardtweg\"></option>\r\n        <option value=\"Hiroshimaplatz\"></option>\r\n        <option value=\"Kiessee\"></option>\r\n        <option value=\"Klinikum\"></option>\r\n        <option value=\"Klosterweg\"></option>\r\n        <option value=\"Kreuzbergring\"></option>\r\n        <option value=\"Krugstraße\"></option>\r\n        <option value=\"Landgericht/ Bahnhof\"></option>\r\n        <option value=\"Lutteranger\"></option>\r\n        <option value=\"Reinholdstraße\"></option>\r\n        <option value=\"Schillerstraße\"></option>\r\n        <option value=\"Schützenplatz\"></option>\r\n        <option value=\"Siekweg\"></option>\r\n        <option value=\"Sollstraße\"></option>\r\n        <option value=\"Stadtstieg\"></option>\r\n        <option value=\"Tammstraße\"></option>\r\n        <option value=\"Teichstraße\"></option>\r\n        <option value=\"Treuenhagen\"></option>\r\n        <option value=\"Tulpenweg\"></option>\r\n        <option value=\"Waldstraße\"></option>\r\n      </datalist>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import React, { useState } from \"react\";\r\nimport \"../Style.css\";\r\nimport Logo from \"./Logo.js\";\r\nimport SearchPage from \"./SearchPage\";\r\n\r\nconst StartPage = (props) => {\r\n  // ClickHandler\r\n  const [hideStartForm, setStartFormHidden] = useState(false);\r\n  const [callSearchPage, setCallSearchPage] = useState(false);\r\n  const [hideIntroSentences, setHideIntroSentences] = useState(false);\r\n\r\n  const continueClickedHandler = () => {\r\n    setCallSearchPage(true);\r\n    setHideIntroSentences(true);\r\n  };\r\n\r\n  return (\r\n    //Import von classes Styling - dem css Modul\r\n    <div>\r\n      {hideStartForm ? null : (\r\n        <form>\r\n          <header className=\"StartPage-header\">\r\n            <h1 className=\"logo\">Nav2Gö</h1>\r\n            <div id=\"welcomeText\">\r\n              <p>\r\n                {hideIntroSentences ? null : (\r\n                  <>\r\n                    <br></br>\r\n                    Wilkommen. <br></br>\r\n                    Nutzen sie diese App, um sich in folgender Situation\r\n                    weiterzuhelfen:\r\n                    <br></br>\r\n                    <br></br>Sie haben sich dazu entschieden, Ihre Freunde in\r\n                    Göttingen zu besuchen. Nachdem Sie am Hauptbahnhof in\r\n                    Göttingen angekommen sind, wollen Sie die öffentlichen\r\n                    Verkehrsmittel nutzen, um zu Ihren Freunden zu fahren.\r\n                    <br></br>\r\n                    <br></br>\r\n                    Ihre Freunde haben Ihnen bereits mitgeteilt, dass Sie an der\r\n                    Haltestelle \"Treuenhagen\" wohnen. Da sie Ihre Freunde nun\r\n                    unglücklicherweise nicht mehr erreichen können, haben Sie\r\n                    sich die lokale Mobilitäts-App „Nav2Gö“ heruntergeladen, um\r\n                    sich vor Ort zurechtzufinden. <br></br> <br></br>\r\n                  </>\r\n                )}\r\n                Nutzen Sie für die Verbindungssuche vom Hauptbahnhof nach\r\n                Treuenhagen das aktuelle Datum und die aktuelle Uhrzeit.\r\n                <br></br>\r\n              </p>\r\n            </div>\r\n            <h1 id=\"appVersionAnzeige2\">App-Version 2</h1>\r\n          </header>\r\n        </form>\r\n      )}\r\n\r\n      {callSearchPage ? (\r\n        <SearchPage\r\n          onGoBack={() => {\r\n            setCallSearchPage(false);\r\n            setHideIntroSentences(false);\r\n          }}\r\n          onSetStartFormHidden={setStartFormHidden}\r\n        />\r\n      ) : (\r\n        <button\r\n          id=\"welcomeTextButton\"\r\n          onClick={continueClickedHandler}\r\n          type=\"submit\"\r\n        >\r\n          Weiter\r\n        </button>\r\n      )}\r\n      {/* {clicked ? ( <SearchPage /> ) : (\r\n            <button className='button' onClick={()=> {continueClickedHandler(); setHideStartDisplay(true);  }} type=\"submit\">\r\n              Weiter\r\n            </button>)\r\n          } */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartPage;\r\n","import React, { useState } from \"react\";\r\nimport StartPage from \"./components/StartPage.js\";\r\n//import Verbindung from \"./components/Verbindung.js\";\r\n//import ConnectionDisplay from \"./components/ConnectionDisplay.js\";\r\n// import StartButtonPage from \"./components/StartButtonPage.js\";\r\n\r\nimport SearchPage from \"./components/SearchPage.js\";\r\nimport Verbindungsanzeige from \"./components/ConnectionDisplay.js\";\r\nimport End from \"./components/End\";\r\n//import  from \"./components/Verbindungsauswahl.js\";\r\nimport ConnectionDisplay from \"./components/ConnectionDisplay.js\";\r\n\r\nconst App = () => {\r\n  return (\r\n    // diese <> </> Umschließung funktioniert in diesem Projekt als Ersatz für einen Wrapper oder <React.Fragment/>\r\n    <>\r\n      {/* <Test/> */}\r\n      <StartPage />\r\n      {/* <Startseite /> */}\r\n      {/* <Verbindung />; */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// Zur Erhebung von Daten der Website - normalerweise zur Messung der user experience\r\n\r\n\r\nconst reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n\r\n    {/* <div>Hallo Welt</div> */}\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n \r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}